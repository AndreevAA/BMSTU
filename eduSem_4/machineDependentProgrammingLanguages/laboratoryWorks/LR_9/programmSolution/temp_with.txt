
main_387.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 d9 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 7a 2f 00 00    	push   QWORD PTR [rip+0x2f7a]        # 3fa0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 7b 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f7b]        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nop    DWORD PTR [rax]
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <.plt>
    107f:	90                   	nop

Disassembly of section .plt.got:

0000000000001080 <__cxa_finalize@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 6d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f6d]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000001090 <putchar@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 15 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f15]        # 3fb0 <putchar@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010a0 <puts@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 0d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f0d]        # 3fb8 <puts@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010b0 <clock@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 05 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f05]        # 3fc0 <clock@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010c0 <__stack_chk_fail@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 fd 2e 00 00 	bnd jmp QWORD PTR [rip+0x2efd]        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    10cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010d0 <printf@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 f5 2e 00 00 	bnd jmp QWORD PTR [rip+0x2ef5]        # 3fd0 <printf@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000010e0 <_start>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	31 ed                	xor    ebp,ebp
    10e6:	49 89 d1             	mov    r9,rdx
    10e9:	5e                   	pop    rsi
    10ea:	48 89 e2             	mov    rdx,rsp
    10ed:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    10f1:	50                   	push   rax
    10f2:	54                   	push   rsp
    10f3:	4c 8d 05 36 0d 00 00 	lea    r8,[rip+0xd36]        # 1e30 <__libc_csu_fini>
    10fa:	48 8d 0d bf 0c 00 00 	lea    rcx,[rip+0xcbf]        # 1dc0 <__libc_csu_init>
    1101:	48 8d 3d 87 09 00 00 	lea    rdi,[rip+0x987]        # 1a8f <main>
    1108:	ff 15 d2 2e 00 00    	call   QWORD PTR [rip+0x2ed2]        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    110e:	f4                   	hlt    
    110f:	90                   	nop

0000000000001110 <deregister_tm_clones>:
    1110:	48 8d 3d f9 2e 00 00 	lea    rdi,[rip+0x2ef9]        # 4010 <__TMC_END__>
    1117:	48 8d 05 f2 2e 00 00 	lea    rax,[rip+0x2ef2]        # 4010 <__TMC_END__>
    111e:	48 39 f8             	cmp    rax,rdi
    1121:	74 15                	je     1138 <deregister_tm_clones+0x28>
    1123:	48 8b 05 ae 2e 00 00 	mov    rax,QWORD PTR [rip+0x2eae]        # 3fd8 <_ITM_deregisterTMCloneTable>
    112a:	48 85 c0             	test   rax,rax
    112d:	74 09                	je     1138 <deregister_tm_clones+0x28>
    112f:	ff e0                	jmp    rax
    1131:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1138:	c3                   	ret    
    1139:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001140 <register_tm_clones>:
    1140:	48 8d 3d c9 2e 00 00 	lea    rdi,[rip+0x2ec9]        # 4010 <__TMC_END__>
    1147:	48 8d 35 c2 2e 00 00 	lea    rsi,[rip+0x2ec2]        # 4010 <__TMC_END__>
    114e:	48 29 fe             	sub    rsi,rdi
    1151:	48 89 f0             	mov    rax,rsi
    1154:	48 c1 ee 3f          	shr    rsi,0x3f
    1158:	48 c1 f8 03          	sar    rax,0x3
    115c:	48 01 c6             	add    rsi,rax
    115f:	48 d1 fe             	sar    rsi,1
    1162:	74 14                	je     1178 <register_tm_clones+0x38>
    1164:	48 8b 05 85 2e 00 00 	mov    rax,QWORD PTR [rip+0x2e85]        # 3ff0 <_ITM_registerTMCloneTable>
    116b:	48 85 c0             	test   rax,rax
    116e:	74 08                	je     1178 <register_tm_clones+0x38>
    1170:	ff e0                	jmp    rax
    1172:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1178:	c3                   	ret    
    1179:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001180 <__do_global_dtors_aux>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	80 3d 85 2e 00 00 00 	cmp    BYTE PTR [rip+0x2e85],0x0        # 4010 <__TMC_END__>
    118b:	75 2b                	jne    11b8 <__do_global_dtors_aux+0x38>
    118d:	55                   	push   rbp
    118e:	48 83 3d 62 2e 00 00 	cmp    QWORD PTR [rip+0x2e62],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1195:	00 
    1196:	48 89 e5             	mov    rbp,rsp
    1199:	74 0c                	je     11a7 <__do_global_dtors_aux+0x27>
    119b:	48 8b 3d 66 2e 00 00 	mov    rdi,QWORD PTR [rip+0x2e66]        # 4008 <__dso_handle>
    11a2:	e8 d9 fe ff ff       	call   1080 <__cxa_finalize@plt>
    11a7:	e8 64 ff ff ff       	call   1110 <deregister_tm_clones>
    11ac:	c6 05 5d 2e 00 00 01 	mov    BYTE PTR [rip+0x2e5d],0x1        # 4010 <__TMC_END__>
    11b3:	5d                   	pop    rbp
    11b4:	c3                   	ret    
    11b5:	0f 1f 00             	nop    DWORD PTR [rax]
    11b8:	c3                   	ret    
    11b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000011c0 <frame_dummy>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	e9 77 ff ff ff       	jmp    1140 <register_tm_clones>

00000000000011c9 <get_64_bit_sum>:
    11c9:	f3 0f 1e fa          	endbr64 
    11cd:	55                   	push   rbp
    11ce:	48 89 e5             	mov    rbp,rsp
    11d1:	f2 0f 11 45 e8       	movsd  QWORD PTR [rbp-0x18],xmm0
    11d6:	f2 0f 11 4d e0       	movsd  QWORD PTR [rbp-0x20],xmm1
    11db:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    11df:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
    11e6:	00 
    11e7:	eb 14                	jmp    11fd <get_64_bit_sum+0x34>
    11e9:	f2 0f 10 45 e8       	movsd  xmm0,QWORD PTR [rbp-0x18]
    11ee:	f2 0f 58 45 e0       	addsd  xmm0,QWORD PTR [rbp-0x20]
    11f3:	f2 0f 11 45 f8       	movsd  QWORD PTR [rbp-0x8],xmm0
    11f8:	48 83 45 f0 01       	add    QWORD PTR [rbp-0x10],0x1
    11fd:	48 81 7d f0 3f 42 0f 	cmp    QWORD PTR [rbp-0x10],0xf423f
    1204:	00 
    1205:	76 e2                	jbe    11e9 <get_64_bit_sum+0x20>
    1207:	90                   	nop
    1208:	90                   	nop
    1209:	5d                   	pop    rbp
    120a:	c3                   	ret    

000000000000120b <get_64_bit_sum_asm>:
    120b:	f3 0f 1e fa          	endbr64 
    120f:	55                   	push   rbp
    1210:	48 89 e5             	mov    rbp,rsp
    1213:	48 83 ec 40          	sub    rsp,0x40
    1217:	f2 0f 11 45 d8       	movsd  QWORD PTR [rbp-0x28],xmm0
    121c:	f2 0f 11 4d d0       	movsd  QWORD PTR [rbp-0x30],xmm1
    1221:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    1225:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    122c:	00 00 
    122e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1232:	31 c0                	xor    eax,eax
    1234:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
    123b:	00 
    123c:	eb 10                	jmp    124e <get_64_bit_sum_asm+0x43>
    123e:	dd 45 d8             	fld    QWORD PTR [rbp-0x28]
    1241:	dd 45 d0             	fld    QWORD PTR [rbp-0x30]
    1244:	de c1                	faddp  st(1),st
    1246:	dd 5d e8             	fstp   QWORD PTR [rbp-0x18]
    1249:	48 83 45 f0 01       	add    QWORD PTR [rbp-0x10],0x1
    124e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    1252:	48 3b 45 c8          	cmp    rax,QWORD PTR [rbp-0x38]
    1256:	72 e6                	jb     123e <get_64_bit_sum_asm+0x33>
    1258:	90                   	nop
    1259:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    125d:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    1264:	00 00 
    1266:	74 05                	je     126d <get_64_bit_sum_asm+0x62>
    1268:	e8 53 fe ff ff       	call   10c0 <__stack_chk_fail@plt>
    126d:	c9                   	leave  
    126e:	c3                   	ret    

000000000000126f <get_64_bit_sum_asm_proc>:
    126f:	f3 0f 1e fa          	endbr64 
    1273:	55                   	push   rbp
    1274:	48 89 e5             	mov    rbp,rsp
    1277:	48 83 ec 30          	sub    rsp,0x30
    127b:	f3 0f 11 45 dc       	movss  DWORD PTR [rbp-0x24],xmm0
    1280:	f3 0f 11 4d d8       	movss  DWORD PTR [rbp-0x28],xmm1
    1285:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    1289:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1290:	00 00 
    1292:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1296:	31 c0                	xor    eax,eax
    1298:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
    129f:	00 
    12a0:	eb 0e                	jmp    12b0 <get_64_bit_sum_asm_proc+0x41>
    12a2:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    12a5:	03 45 d8             	add    eax,DWORD PTR [rbp-0x28]
    12a8:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    12ab:	48 83 45 f0 01       	add    QWORD PTR [rbp-0x10],0x1
    12b0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    12b4:	48 3b 45 d0          	cmp    rax,QWORD PTR [rbp-0x30]
    12b8:	72 e8                	jb     12a2 <get_64_bit_sum_asm_proc+0x33>
    12ba:	f3 0f 10 45 ec       	movss  xmm0,DWORD PTR [rbp-0x14]
    12bf:	f3 0f 5a d0          	cvtss2sd xmm2,xmm0
    12c3:	f3 0f 10 45 d8       	movss  xmm0,DWORD PTR [rbp-0x28]
    12c8:	f3 0f 5a c8          	cvtss2sd xmm1,xmm0
    12cc:	f3 0f 10 45 dc       	movss  xmm0,DWORD PTR [rbp-0x24]
    12d1:	f3 0f 5a c0          	cvtss2sd xmm0,xmm0
    12d5:	48 8d 3d 2c 0d 00 00 	lea    rdi,[rip+0xd2c]        # 2008 <_IO_stdin_used+0x8>
    12dc:	b8 03 00 00 00       	mov    eax,0x3
    12e1:	e8 ea fd ff ff       	call   10d0 <printf@plt>
    12e6:	90                   	nop
    12e7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    12eb:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    12f2:	00 00 
    12f4:	74 05                	je     12fb <get_64_bit_sum_asm_proc+0x8c>
    12f6:	e8 c5 fd ff ff       	call   10c0 <__stack_chk_fail@plt>
    12fb:	c9                   	leave  
    12fc:	c3                   	ret    

00000000000012fd <get_64_bit_prod>:
    12fd:	f3 0f 1e fa          	endbr64 
    1301:	55                   	push   rbp
    1302:	48 89 e5             	mov    rbp,rsp
    1305:	f2 0f 11 45 e8       	movsd  QWORD PTR [rbp-0x18],xmm0
    130a:	f2 0f 11 4d e0       	movsd  QWORD PTR [rbp-0x20],xmm1
    130f:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    1313:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
    131a:	00 
    131b:	eb 14                	jmp    1331 <get_64_bit_prod+0x34>
    131d:	f2 0f 10 45 e8       	movsd  xmm0,QWORD PTR [rbp-0x18]
    1322:	f2 0f 59 45 e0       	mulsd  xmm0,QWORD PTR [rbp-0x20]
    1327:	f2 0f 11 45 f8       	movsd  QWORD PTR [rbp-0x8],xmm0
    132c:	48 83 45 f0 01       	add    QWORD PTR [rbp-0x10],0x1
    1331:	48 81 7d f0 3f 42 0f 	cmp    QWORD PTR [rbp-0x10],0xf423f
    1338:	00 
    1339:	76 e2                	jbe    131d <get_64_bit_prod+0x20>
    133b:	90                   	nop
    133c:	90                   	nop
    133d:	5d                   	pop    rbp
    133e:	c3                   	ret    

000000000000133f <get_64_bit_prod_asm>:
    133f:	f3 0f 1e fa          	endbr64 
    1343:	55                   	push   rbp
    1344:	48 89 e5             	mov    rbp,rsp
    1347:	48 83 ec 40          	sub    rsp,0x40
    134b:	f2 0f 11 45 d8       	movsd  QWORD PTR [rbp-0x28],xmm0
    1350:	f2 0f 11 4d d0       	movsd  QWORD PTR [rbp-0x30],xmm1
    1355:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    1359:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1360:	00 00 
    1362:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1366:	31 c0                	xor    eax,eax
    1368:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
    136f:	00 
    1370:	eb 10                	jmp    1382 <get_64_bit_prod_asm+0x43>
    1372:	dd 45 d8             	fld    QWORD PTR [rbp-0x28]
    1375:	dd 45 d0             	fld    QWORD PTR [rbp-0x30]
    1378:	de c9                	fmulp  st(1),st
    137a:	dd 5d e8             	fstp   QWORD PTR [rbp-0x18]
    137d:	48 83 45 f0 01       	add    QWORD PTR [rbp-0x10],0x1
    1382:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    1386:	48 3b 45 c8          	cmp    rax,QWORD PTR [rbp-0x38]
    138a:	72 e6                	jb     1372 <get_64_bit_prod_asm+0x33>
    138c:	90                   	nop
    138d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1391:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    1398:	00 00 
    139a:	74 05                	je     13a1 <get_64_bit_prod_asm+0x62>
    139c:	e8 1f fd ff ff       	call   10c0 <__stack_chk_fail@plt>
    13a1:	c9                   	leave  
    13a2:	c3                   	ret    

00000000000013a3 <out_64_bit_dimension>:
    13a3:	f3 0f 1e fa          	endbr64 
    13a7:	55                   	push   rbp
    13a8:	48 89 e5             	mov    rbp,rsp
    13ab:	48 83 ec 20          	sub    rsp,0x20
    13af:	be 40 00 00 00       	mov    esi,0x40
    13b4:	48 8d 3d 87 0c 00 00 	lea    rdi,[rip+0xc87]        # 2042 <_IO_stdin_used+0x42>
    13bb:	b8 00 00 00 00       	mov    eax,0x0
    13c0:	e8 0b fd ff ff       	call   10d0 <printf@plt>
    13c5:	f2 0f 10 05 e3 0c 00 	movsd  xmm0,QWORD PTR [rip+0xce3]        # 20b0 <_IO_stdin_used+0xb0>
    13cc:	00 
    13cd:	f2 0f 11 45 e0       	movsd  QWORD PTR [rbp-0x20],xmm0
    13d2:	f2 0f 10 05 de 0c 00 	movsd  xmm0,QWORD PTR [rip+0xcde]        # 20b8 <_IO_stdin_used+0xb8>
    13d9:	00 
    13da:	f2 0f 11 45 e8       	movsd  QWORD PTR [rbp-0x18],xmm0
    13df:	e8 cc fc ff ff       	call   10b0 <clock@plt>
    13e4:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    13e8:	f2 0f 10 45 e8       	movsd  xmm0,QWORD PTR [rbp-0x18]
    13ed:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    13f1:	bf 40 42 0f 00       	mov    edi,0xf4240
    13f6:	66 0f 28 c8          	movapd xmm1,xmm0
    13fa:	66 48 0f 6e c0       	movq   xmm0,rax
    13ff:	e8 c5 fd ff ff       	call   11c9 <get_64_bit_sum>
    1404:	e8 a7 fc ff ff       	call   10b0 <clock@plt>
    1409:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    140d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1411:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    1415:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
    141a:	f2 0f 10 0d 9e 0c 00 	movsd  xmm1,QWORD PTR [rip+0xc9e]        # 20c0 <_IO_stdin_used+0xc0>
    1421:	00 
    1422:	f2 0f 5e c1          	divsd  xmm0,xmm1
    1426:	f2 0f 10 0d 92 0c 00 	movsd  xmm1,QWORD PTR [rip+0xc92]        # 20c0 <_IO_stdin_used+0xc0>
    142d:	00 
    142e:	f2 0f 5e c1          	divsd  xmm0,xmm1
    1432:	48 8d 3d 26 0c 00 00 	lea    rdi,[rip+0xc26]        # 205f <_IO_stdin_used+0x5f>
    1439:	b8 01 00 00 00       	mov    eax,0x1
    143e:	e8 8d fc ff ff       	call   10d0 <printf@plt>
    1443:	e8 68 fc ff ff       	call   10b0 <clock@plt>
    1448:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    144c:	f2 0f 10 45 e8       	movsd  xmm0,QWORD PTR [rbp-0x18]
    1451:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    1455:	bf 40 42 0f 00       	mov    edi,0xf4240
    145a:	66 0f 28 c8          	movapd xmm1,xmm0
    145e:	66 48 0f 6e c0       	movq   xmm0,rax
    1463:	e8 a3 fd ff ff       	call   120b <get_64_bit_sum_asm>
    1468:	e8 43 fc ff ff       	call   10b0 <clock@plt>
    146d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1471:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1475:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    1479:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
    147e:	f2 0f 10 0d 3a 0c 00 	movsd  xmm1,QWORD PTR [rip+0xc3a]        # 20c0 <_IO_stdin_used+0xc0>
    1485:	00 
    1486:	f2 0f 5e c1          	divsd  xmm0,xmm1
    148a:	f2 0f 10 0d 2e 0c 00 	movsd  xmm1,QWORD PTR [rip+0xc2e]        # 20c0 <_IO_stdin_used+0xc0>
    1491:	00 
    1492:	f2 0f 5e c1          	divsd  xmm0,xmm1
    1496:	48 8d 3d d5 0b 00 00 	lea    rdi,[rip+0xbd5]        # 2072 <_IO_stdin_used+0x72>
    149d:	b8 01 00 00 00       	mov    eax,0x1
    14a2:	e8 29 fc ff ff       	call   10d0 <printf@plt>
    14a7:	e8 04 fc ff ff       	call   10b0 <clock@plt>
    14ac:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    14b0:	f2 0f 10 45 e8       	movsd  xmm0,QWORD PTR [rbp-0x18]
    14b5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    14b9:	bf 40 42 0f 00       	mov    edi,0xf4240
    14be:	66 0f 28 c8          	movapd xmm1,xmm0
    14c2:	66 48 0f 6e c0       	movq   xmm0,rax
    14c7:	e8 31 fe ff ff       	call   12fd <get_64_bit_prod>
    14cc:	e8 df fb ff ff       	call   10b0 <clock@plt>
    14d1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    14d5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    14d9:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    14dd:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
    14e2:	f2 0f 10 0d d6 0b 00 	movsd  xmm1,QWORD PTR [rip+0xbd6]        # 20c0 <_IO_stdin_used+0xc0>
    14e9:	00 
    14ea:	f2 0f 5e c1          	divsd  xmm0,xmm1
    14ee:	f2 0f 10 0d ca 0b 00 	movsd  xmm1,QWORD PTR [rip+0xbca]        # 20c0 <_IO_stdin_used+0xc0>
    14f5:	00 
    14f6:	f2 0f 5e c1          	divsd  xmm0,xmm1
    14fa:	48 8d 3d 84 0b 00 00 	lea    rdi,[rip+0xb84]        # 2085 <_IO_stdin_used+0x85>
    1501:	b8 01 00 00 00       	mov    eax,0x1
    1506:	e8 c5 fb ff ff       	call   10d0 <printf@plt>
    150b:	e8 a0 fb ff ff       	call   10b0 <clock@plt>
    1510:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    1514:	f2 0f 10 45 e8       	movsd  xmm0,QWORD PTR [rbp-0x18]
    1519:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    151d:	bf 40 42 0f 00       	mov    edi,0xf4240
    1522:	66 0f 28 c8          	movapd xmm1,xmm0
    1526:	66 48 0f 6e c0       	movq   xmm0,rax
    152b:	e8 0f fe ff ff       	call   133f <get_64_bit_prod_asm>
    1530:	e8 7b fb ff ff       	call   10b0 <clock@plt>
    1535:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1539:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    153d:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    1541:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
    1546:	f2 0f 10 0d 72 0b 00 	movsd  xmm1,QWORD PTR [rip+0xb72]        # 20c0 <_IO_stdin_used+0xc0>
    154d:	00 
    154e:	f2 0f 5e c1          	divsd  xmm0,xmm1
    1552:	f2 0f 10 0d 66 0b 00 	movsd  xmm1,QWORD PTR [rip+0xb66]        # 20c0 <_IO_stdin_used+0xc0>
    1559:	00 
    155a:	f2 0f 5e c1          	divsd  xmm0,xmm1
    155e:	48 8d 3d 33 0b 00 00 	lea    rdi,[rip+0xb33]        # 2098 <_IO_stdin_used+0x98>
    1565:	b8 01 00 00 00       	mov    eax,0x1
    156a:	e8 61 fb ff ff       	call   10d0 <printf@plt>
    156f:	bf 0a 00 00 00       	mov    edi,0xa
    1574:	e8 17 fb ff ff       	call   1090 <putchar@plt>
    1579:	90                   	nop
    157a:	c9                   	leave  
    157b:	c3                   	ret    

000000000000157c <get_32_bit_sum>:
    157c:	f3 0f 1e fa          	endbr64 
    1580:	55                   	push   rbp
    1581:	48 89 e5             	mov    rbp,rsp
    1584:	f3 0f 11 45 ec       	movss  DWORD PTR [rbp-0x14],xmm0
    1589:	f3 0f 11 4d e8       	movss  DWORD PTR [rbp-0x18],xmm1
    158e:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    1592:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
    1599:	00 
    159a:	eb 0e                	jmp    15aa <get_32_bit_sum+0x2e>
    159c:	d9 45 ec             	fld    DWORD PTR [rbp-0x14]
    159f:	d8 45 e8             	fadd   DWORD PTR [rbp-0x18]
    15a2:	d9 5d f4             	fstp   DWORD PTR [rbp-0xc]
    15a5:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
    15aa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    15ae:	48 3b 45 e0          	cmp    rax,QWORD PTR [rbp-0x20]
    15b2:	72 e8                	jb     159c <get_32_bit_sum+0x20>
    15b4:	90                   	nop
    15b5:	90                   	nop
    15b6:	5d                   	pop    rbp
    15b7:	c3                   	ret    

00000000000015b8 <get_32_bit_sum_asm>:
    15b8:	f3 0f 1e fa          	endbr64 
    15bc:	55                   	push   rbp
    15bd:	48 89 e5             	mov    rbp,rsp
    15c0:	48 83 ec 30          	sub    rsp,0x30
    15c4:	f3 0f 11 45 dc       	movss  DWORD PTR [rbp-0x24],xmm0
    15c9:	f3 0f 11 4d d8       	movss  DWORD PTR [rbp-0x28],xmm1
    15ce:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    15d2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    15d9:	00 00 
    15db:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    15df:	31 c0                	xor    eax,eax
    15e1:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
    15e8:	00 
    15e9:	eb 10                	jmp    15fb <get_32_bit_sum_asm+0x43>
    15eb:	d9 45 dc             	fld    DWORD PTR [rbp-0x24]
    15ee:	d9 45 d8             	fld    DWORD PTR [rbp-0x28]
    15f1:	de c1                	faddp  st(1),st
    15f3:	d9 5d ec             	fstp   DWORD PTR [rbp-0x14]
    15f6:	48 83 45 f0 01       	add    QWORD PTR [rbp-0x10],0x1
    15fb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    15ff:	48 3b 45 d0          	cmp    rax,QWORD PTR [rbp-0x30]
    1603:	72 e6                	jb     15eb <get_32_bit_sum_asm+0x33>
    1605:	90                   	nop
    1606:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    160a:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    1611:	00 00 
    1613:	74 05                	je     161a <get_32_bit_sum_asm+0x62>
    1615:	e8 a6 fa ff ff       	call   10c0 <__stack_chk_fail@plt>
    161a:	c9                   	leave  
    161b:	c3                   	ret    

000000000000161c <get_32_bit_sum_asm_proc>:
    161c:	f3 0f 1e fa          	endbr64 
    1620:	55                   	push   rbp
    1621:	48 89 e5             	mov    rbp,rsp
    1624:	48 83 ec 50          	sub    rsp,0x50
    1628:	f3 0f 11 45 dc       	movss  DWORD PTR [rbp-0x24],xmm0
    162d:	f3 0f 11 4d d8       	movss  DWORD PTR [rbp-0x28],xmm1
    1632:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    1636:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    163d:	00 00 
    163f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1643:	31 c0                	xor    eax,eax
    1645:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
    164c:	00 
    164d:	eb 0e                	jmp    165d <get_32_bit_sum_asm_proc+0x41>
    164f:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    1652:	03 45 d8             	add    eax,DWORD PTR [rbp-0x28]
    1655:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    1658:	48 83 45 f0 01       	add    QWORD PTR [rbp-0x10],0x1
    165d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    1661:	48 3b 45 d0          	cmp    rax,QWORD PTR [rbp-0x30]
    1665:	72 e8                	jb     164f <get_32_bit_sum_asm_proc+0x33>
    1667:	d9 45 ec             	fld    DWORD PTR [rbp-0x14]
    166a:	dd 5d c8             	fstp   QWORD PTR [rbp-0x38]
    166d:	d9 45 d8             	fld    DWORD PTR [rbp-0x28]
    1670:	dd 5d c0             	fstp   QWORD PTR [rbp-0x40]
    1673:	d9 45 dc             	fld    DWORD PTR [rbp-0x24]
    1676:	dd 5d b8             	fstp   QWORD PTR [rbp-0x48]
    1679:	f2 0f 10 45 b8       	movsd  xmm0,QWORD PTR [rbp-0x48]
    167e:	f2 0f 10 55 c8       	movsd  xmm2,QWORD PTR [rbp-0x38]
    1683:	f2 0f 10 4d c0       	movsd  xmm1,QWORD PTR [rbp-0x40]
    1688:	48 8d 3d 39 0a 00 00 	lea    rdi,[rip+0xa39]        # 20c8 <_IO_stdin_used+0xc8>
    168f:	b8 03 00 00 00       	mov    eax,0x3
    1694:	e8 37 fa ff ff       	call   10d0 <printf@plt>
    1699:	90                   	nop
    169a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    169e:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    16a5:	00 00 
    16a7:	74 05                	je     16ae <get_32_bit_sum_asm_proc+0x92>
    16a9:	e8 12 fa ff ff       	call   10c0 <__stack_chk_fail@plt>
    16ae:	c9                   	leave  
    16af:	c3                   	ret    

00000000000016b0 <get_32_bit_prod>:
    16b0:	f3 0f 1e fa          	endbr64 
    16b4:	55                   	push   rbp
    16b5:	48 89 e5             	mov    rbp,rsp
    16b8:	f3 0f 11 45 ec       	movss  DWORD PTR [rbp-0x14],xmm0
    16bd:	f3 0f 11 4d e8       	movss  DWORD PTR [rbp-0x18],xmm1
    16c2:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
    16c6:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
    16cd:	00 
    16ce:	eb 0e                	jmp    16de <get_32_bit_prod+0x2e>
    16d0:	d9 45 ec             	fld    DWORD PTR [rbp-0x14]
    16d3:	d8 4d e8             	fmul   DWORD PTR [rbp-0x18]
    16d6:	d9 5d f4             	fstp   DWORD PTR [rbp-0xc]
    16d9:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
    16de:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    16e2:	48 3b 45 e0          	cmp    rax,QWORD PTR [rbp-0x20]
    16e6:	72 e8                	jb     16d0 <get_32_bit_prod+0x20>
    16e8:	90                   	nop
    16e9:	90                   	nop
    16ea:	5d                   	pop    rbp
    16eb:	c3                   	ret    

00000000000016ec <get_32_bit_prod_asm>:
    16ec:	f3 0f 1e fa          	endbr64 
    16f0:	55                   	push   rbp
    16f1:	48 89 e5             	mov    rbp,rsp
    16f4:	48 83 ec 30          	sub    rsp,0x30
    16f8:	f3 0f 11 45 dc       	movss  DWORD PTR [rbp-0x24],xmm0
    16fd:	f3 0f 11 4d d8       	movss  DWORD PTR [rbp-0x28],xmm1
    1702:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
    1706:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    170d:	00 00 
    170f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1713:	31 c0                	xor    eax,eax
    1715:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
    171c:	00 
    171d:	eb 10                	jmp    172f <get_32_bit_prod_asm+0x43>
    171f:	d9 45 dc             	fld    DWORD PTR [rbp-0x24]
    1722:	d9 45 d8             	fld    DWORD PTR [rbp-0x28]
    1725:	de c9                	fmulp  st(1),st
    1727:	d9 5d ec             	fstp   DWORD PTR [rbp-0x14]
    172a:	48 83 45 f0 01       	add    QWORD PTR [rbp-0x10],0x1
    172f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    1733:	48 3b 45 d0          	cmp    rax,QWORD PTR [rbp-0x30]
    1737:	72 e6                	jb     171f <get_32_bit_prod_asm+0x33>
    1739:	90                   	nop
    173a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    173e:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    1745:	00 00 
    1747:	74 05                	je     174e <get_32_bit_prod_asm+0x62>
    1749:	e8 72 f9 ff ff       	call   10c0 <__stack_chk_fail@plt>
    174e:	c9                   	leave  
    174f:	c3                   	ret    

0000000000001750 <out_32_bit_dimension>:
    1750:	f3 0f 1e fa          	endbr64 
    1754:	55                   	push   rbp
    1755:	48 89 e5             	mov    rbp,rsp
    1758:	48 83 ec 30          	sub    rsp,0x30
    175c:	be 20 00 00 00       	mov    esi,0x20
    1761:	48 8d 3d 9a 09 00 00 	lea    rdi,[rip+0x99a]        # 2102 <_IO_stdin_used+0x102>
    1768:	b8 00 00 00 00       	mov    eax,0x0
    176d:	e8 5e f9 ff ff       	call   10d0 <printf@plt>
    1772:	d9 05 f4 09 00 00    	fld    DWORD PTR [rip+0x9f4]        # 216c <_IO_stdin_used+0x16c>
    1778:	d9 5d e8             	fstp   DWORD PTR [rbp-0x18]
    177b:	d9 05 ef 09 00 00    	fld    DWORD PTR [rip+0x9ef]        # 2170 <_IO_stdin_used+0x170>
    1781:	d9 5d ec             	fstp   DWORD PTR [rbp-0x14]
    1784:	e8 27 f9 ff ff       	call   10b0 <clock@plt>
    1789:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    178d:	f3 0f 10 45 ec       	movss  xmm0,DWORD PTR [rbp-0x14]
    1792:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
    1795:	bf 40 42 0f 00       	mov    edi,0xf4240
    179a:	0f 28 c8             	movaps xmm1,xmm0
    179d:	66 0f 6e c0          	movd   xmm0,eax
    17a1:	e8 d6 fd ff ff       	call   157c <get_32_bit_sum>
    17a6:	e8 05 f9 ff ff       	call   10b0 <clock@plt>
    17ab:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    17af:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    17b3:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    17b7:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    17bb:	df 6d d8             	fild   QWORD PTR [rbp-0x28]
    17be:	dd 05 b4 09 00 00    	fld    QWORD PTR [rip+0x9b4]        # 2178 <_IO_stdin_used+0x178>
    17c4:	de f9                	fdivp  st(1),st
    17c6:	dd 05 ac 09 00 00    	fld    QWORD PTR [rip+0x9ac]        # 2178 <_IO_stdin_used+0x178>
    17cc:	de f9                	fdivp  st(1),st
    17ce:	dd 5d d8             	fstp   QWORD PTR [rbp-0x28]
    17d1:	f2 0f 10 45 d8       	movsd  xmm0,QWORD PTR [rbp-0x28]
    17d6:	48 8d 3d 41 09 00 00 	lea    rdi,[rip+0x941]        # 211e <_IO_stdin_used+0x11e>
    17dd:	b8 01 00 00 00       	mov    eax,0x1
    17e2:	e8 e9 f8 ff ff       	call   10d0 <printf@plt>
    17e7:	e8 c4 f8 ff ff       	call   10b0 <clock@plt>
    17ec:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    17f0:	f3 0f 10 45 ec       	movss  xmm0,DWORD PTR [rbp-0x14]
    17f5:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
    17f8:	bf 40 42 0f 00       	mov    edi,0xf4240
    17fd:	0f 28 c8             	movaps xmm1,xmm0
    1800:	66 0f 6e c0          	movd   xmm0,eax
    1804:	e8 13 fe ff ff       	call   161c <get_32_bit_sum_asm_proc>
    1809:	e8 a2 f8 ff ff       	call   10b0 <clock@plt>
    180e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1812:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1816:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    181a:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    181e:	df 6d d8             	fild   QWORD PTR [rbp-0x28]
    1821:	dd 05 51 09 00 00    	fld    QWORD PTR [rip+0x951]        # 2178 <_IO_stdin_used+0x178>
    1827:	de f9                	fdivp  st(1),st
    1829:	dd 05 49 09 00 00    	fld    QWORD PTR [rip+0x949]        # 2178 <_IO_stdin_used+0x178>
    182f:	de f9                	fdivp  st(1),st
    1831:	dd 5d d8             	fstp   QWORD PTR [rbp-0x28]
    1834:	f2 0f 10 45 d8       	movsd  xmm0,QWORD PTR [rbp-0x28]
    1839:	48 8d 3d f1 08 00 00 	lea    rdi,[rip+0x8f1]        # 2131 <_IO_stdin_used+0x131>
    1840:	b8 01 00 00 00       	mov    eax,0x1
    1845:	e8 86 f8 ff ff       	call   10d0 <printf@plt>
    184a:	e8 61 f8 ff ff       	call   10b0 <clock@plt>
    184f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    1853:	f3 0f 10 45 ec       	movss  xmm0,DWORD PTR [rbp-0x14]
    1858:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
    185b:	bf 40 42 0f 00       	mov    edi,0xf4240
    1860:	0f 28 c8             	movaps xmm1,xmm0
    1863:	66 0f 6e c0          	movd   xmm0,eax
    1867:	e8 44 fe ff ff       	call   16b0 <get_32_bit_prod>
    186c:	e8 3f f8 ff ff       	call   10b0 <clock@plt>
    1871:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1875:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1879:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    187d:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    1881:	df 6d d8             	fild   QWORD PTR [rbp-0x28]
    1884:	dd 05 ee 08 00 00    	fld    QWORD PTR [rip+0x8ee]        # 2178 <_IO_stdin_used+0x178>
    188a:	de f9                	fdivp  st(1),st
    188c:	dd 05 e6 08 00 00    	fld    QWORD PTR [rip+0x8e6]        # 2178 <_IO_stdin_used+0x178>
    1892:	de f9                	fdivp  st(1),st
    1894:	dd 5d d8             	fstp   QWORD PTR [rbp-0x28]
    1897:	f2 0f 10 45 d8       	movsd  xmm0,QWORD PTR [rbp-0x28]
    189c:	48 8d 3d a1 08 00 00 	lea    rdi,[rip+0x8a1]        # 2144 <_IO_stdin_used+0x144>
    18a3:	b8 01 00 00 00       	mov    eax,0x1
    18a8:	e8 23 f8 ff ff       	call   10d0 <printf@plt>
    18ad:	e8 fe f7 ff ff       	call   10b0 <clock@plt>
    18b2:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    18b6:	f3 0f 10 45 ec       	movss  xmm0,DWORD PTR [rbp-0x14]
    18bb:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
    18be:	bf 40 42 0f 00       	mov    edi,0xf4240
    18c3:	0f 28 c8             	movaps xmm1,xmm0
    18c6:	66 0f 6e c0          	movd   xmm0,eax
    18ca:	e8 1d fe ff ff       	call   16ec <get_32_bit_prod_asm>
    18cf:	e8 dc f7 ff ff       	call   10b0 <clock@plt>
    18d4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    18d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    18dc:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
    18e0:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    18e4:	df 6d d8             	fild   QWORD PTR [rbp-0x28]
    18e7:	dd 05 8b 08 00 00    	fld    QWORD PTR [rip+0x88b]        # 2178 <_IO_stdin_used+0x178>
    18ed:	de f9                	fdivp  st(1),st
    18ef:	dd 05 83 08 00 00    	fld    QWORD PTR [rip+0x883]        # 2178 <_IO_stdin_used+0x178>
    18f5:	de f9                	fdivp  st(1),st
    18f7:	dd 5d d8             	fstp   QWORD PTR [rbp-0x28]
    18fa:	f2 0f 10 45 d8       	movsd  xmm0,QWORD PTR [rbp-0x28]
    18ff:	48 8d 3d 51 08 00 00 	lea    rdi,[rip+0x851]        # 2157 <_IO_stdin_used+0x157>
    1906:	b8 01 00 00 00       	mov    eax,0x1
    190b:	e8 c0 f7 ff ff       	call   10d0 <printf@plt>
    1910:	bf 0a 00 00 00       	mov    edi,0xa
    1915:	e8 76 f7 ff ff       	call   1090 <putchar@plt>
    191a:	90                   	nop
    191b:	c9                   	leave  
    191c:	c3                   	ret    

000000000000191d <out_sin_comparation>:
    191d:	f3 0f 1e fa          	endbr64 
    1921:	55                   	push   rbp
    1922:	48 89 e5             	mov    rbp,rsp
    1925:	48 83 ec 10          	sub    rsp,0x10
    1929:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1930:	00 00 
    1932:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1936:	31 c0                	xor    eax,eax
    1938:	d9 ee                	fldz   
    193a:	dd 5d f0             	fstp   QWORD PTR [rbp-0x10]
    193d:	48 8d 3d 3c 08 00 00 	lea    rdi,[rip+0x83c]        # 2180 <_IO_stdin_used+0x180>
    1944:	e8 57 f7 ff ff       	call   10a0 <puts@plt>
    1949:	48 8d 3d 56 08 00 00 	lea    rdi,[rip+0x856]        # 21a6 <_IO_stdin_used+0x1a6>
    1950:	e8 4b f7 ff ff       	call   10a0 <puts@plt>
    1955:	48 8d 3d 5d 08 00 00 	lea    rdi,[rip+0x85d]        # 21b9 <_IO_stdin_used+0x1b9>
    195c:	e8 3f f7 ff ff       	call   10a0 <puts@plt>
    1961:	48 8b 05 00 09 00 00 	mov    rax,QWORD PTR [rip+0x900]        # 2268 <_IO_stdin_used+0x268>
    1968:	66 48 0f 6e c0       	movq   xmm0,rax
    196d:	48 8d 3d 5b 08 00 00 	lea    rdi,[rip+0x85b]        # 21cf <_IO_stdin_used+0x1cf>
    1974:	b8 01 00 00 00       	mov    eax,0x1
    1979:	e8 52 f7 ff ff       	call   10d0 <printf@plt>
    197e:	48 8b 05 eb 08 00 00 	mov    rax,QWORD PTR [rip+0x8eb]        # 2270 <_IO_stdin_used+0x270>
    1985:	66 48 0f 6e c0       	movq   xmm0,rax
    198a:	48 8d 3d 52 08 00 00 	lea    rdi,[rip+0x852]        # 21e3 <_IO_stdin_used+0x1e3>
    1991:	b8 01 00 00 00       	mov    eax,0x1
    1996:	e8 35 f7 ff ff       	call   10d0 <printf@plt>
    199b:	d9 eb                	fldpi  
    199d:	d9 fe                	fsin   
    199f:	dd 5d f0             	fstp   QWORD PTR [rbp-0x10]
    19a2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    19a6:	66 48 0f 6e c0       	movq   xmm0,rax
    19ab:	48 8d 3d 45 08 00 00 	lea    rdi,[rip+0x845]        # 21f7 <_IO_stdin_used+0x1f7>
    19b2:	b8 01 00 00 00       	mov    eax,0x1
    19b7:	e8 14 f7 ff ff       	call   10d0 <printf@plt>
    19bc:	48 8d 3d 43 08 00 00 	lea    rdi,[rip+0x843]        # 2206 <_IO_stdin_used+0x206>
    19c3:	e8 d8 f6 ff ff       	call   10a0 <puts@plt>
    19c8:	bf 0a 00 00 00       	mov    edi,0xa
    19cd:	e8 be f6 ff ff       	call   1090 <putchar@plt>
    19d2:	48 8d 3d 47 08 00 00 	lea    rdi,[rip+0x847]        # 2220 <_IO_stdin_used+0x220>
    19d9:	e8 c2 f6 ff ff       	call   10a0 <puts@plt>
    19de:	48 8d 3d 65 08 00 00 	lea    rdi,[rip+0x865]        # 224a <_IO_stdin_used+0x24a>
    19e5:	e8 b6 f6 ff ff       	call   10a0 <puts@plt>
    19ea:	48 8d 3d c8 07 00 00 	lea    rdi,[rip+0x7c8]        # 21b9 <_IO_stdin_used+0x1b9>
    19f1:	e8 aa f6 ff ff       	call   10a0 <puts@plt>
    19f6:	48 8b 05 7b 08 00 00 	mov    rax,QWORD PTR [rip+0x87b]        # 2278 <_IO_stdin_used+0x278>
    19fd:	66 48 0f 6e c0       	movq   xmm0,rax
    1a02:	48 8d 3d c6 07 00 00 	lea    rdi,[rip+0x7c6]        # 21cf <_IO_stdin_used+0x1cf>
    1a09:	b8 01 00 00 00       	mov    eax,0x1
    1a0e:	e8 bd f6 ff ff       	call   10d0 <printf@plt>
    1a13:	48 8b 05 66 08 00 00 	mov    rax,QWORD PTR [rip+0x866]        # 2280 <_IO_stdin_used+0x280>
    1a1a:	66 48 0f 6e c0       	movq   xmm0,rax
    1a1f:	48 8d 3d bd 07 00 00 	lea    rdi,[rip+0x7bd]        # 21e3 <_IO_stdin_used+0x1e3>
    1a26:	b8 01 00 00 00       	mov    eax,0x1
    1a2b:	e8 a0 f6 ff ff       	call   10d0 <printf@plt>
    1a30:	dd 05 52 08 00 00    	fld    QWORD PTR [rip+0x852]        # 2288 <_IO_stdin_used+0x288>
    1a36:	dd 5d f0             	fstp   QWORD PTR [rbp-0x10]
    1a39:	d9 eb                	fldpi  
    1a3b:	d9 e8                	fld1   
    1a3d:	d9 e8                	fld1   
    1a3f:	de c1                	faddp  st(1),st
    1a41:	de f9                	fdivp  st(1),st
    1a43:	d9 fe                	fsin   
    1a45:	dd 5d f0             	fstp   QWORD PTR [rbp-0x10]
    1a48:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    1a4c:	66 48 0f 6e c0       	movq   xmm0,rax
    1a51:	48 8d 3d 9f 07 00 00 	lea    rdi,[rip+0x79f]        # 21f7 <_IO_stdin_used+0x1f7>
    1a58:	b8 01 00 00 00       	mov    eax,0x1
    1a5d:	e8 6e f6 ff ff       	call   10d0 <printf@plt>
    1a62:	48 8d 3d 9d 07 00 00 	lea    rdi,[rip+0x79d]        # 2206 <_IO_stdin_used+0x206>
    1a69:	e8 32 f6 ff ff       	call   10a0 <puts@plt>
    1a6e:	bf 0a 00 00 00       	mov    edi,0xa
    1a73:	e8 18 f6 ff ff       	call   1090 <putchar@plt>
    1a78:	90                   	nop
    1a79:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1a7d:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    1a84:	00 00 
    1a86:	74 05                	je     1a8d <out_sin_comparation+0x170>
    1a88:	e8 33 f6 ff ff       	call   10c0 <__stack_chk_fail@plt>
    1a8d:	c9                   	leave  
    1a8e:	c3                   	ret    

0000000000001a8f <main>:
    1a8f:	f3 0f 1e fa          	endbr64 
    1a93:	55                   	push   rbp
    1a94:	48 89 e5             	mov    rbp,rsp
    1a97:	b8 00 00 00 00       	mov    eax,0x0
    1a9c:	e8 7c fe ff ff       	call   191d <out_sin_comparation>
    1aa1:	b8 00 00 00 00       	mov    eax,0x0
    1aa6:	e8 a5 fc ff ff       	call   1750 <out_32_bit_dimension>
    1aab:	b8 00 00 00 00       	mov    eax,0x0
    1ab0:	e8 ee f8 ff ff       	call   13a3 <out_64_bit_dimension>
    1ab5:	b8 00 00 00 00       	mov    eax,0x0
    1aba:	e8 23 01 00 00       	call   1be2 <out_80_bit_dimension>
    1abf:	b8 00 00 00 00       	mov    eax,0x0
    1ac4:	5d                   	pop    rbp
    1ac5:	c3                   	ret    

0000000000001ac6 <get_80_bit_sum>:
    1ac6:	f3 0f 1e fa          	endbr64 
    1aca:	55                   	push   rbp
    1acb:	48 89 e5             	mov    rbp,rsp
    1ace:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    1ad2:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
    1ad9:	00 
    1ada:	eb 10                	jmp    1aec <get_80_bit_sum+0x26>
    1adc:	db 6d 10             	fld    TBYTE PTR [rbp+0x10]
    1adf:	db 6d 20             	fld    TBYTE PTR [rbp+0x20]
    1ae2:	de c1                	faddp  st(1),st
    1ae4:	db 7d f0             	fstp   TBYTE PTR [rbp-0x10]
    1ae7:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
    1aec:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1af0:	48 3b 45 d8          	cmp    rax,QWORD PTR [rbp-0x28]
    1af4:	72 e6                	jb     1adc <get_80_bit_sum+0x16>
    1af6:	90                   	nop
    1af7:	90                   	nop
    1af8:	5d                   	pop    rbp
    1af9:	c3                   	ret    

0000000000001afa <get_80_bit_sum_asm>:
    1afa:	f3 0f 1e fa          	endbr64 
    1afe:	55                   	push   rbp
    1aff:	48 89 e5             	mov    rbp,rsp
    1b02:	48 83 ec 40          	sub    rsp,0x40
    1b06:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    1b0a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1b11:	00 00 
    1b13:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1b17:	31 c0                	xor    eax,eax
    1b19:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    1b20:	00 
    1b21:	eb 10                	jmp    1b33 <get_80_bit_sum_asm+0x39>
    1b23:	db 6d 10             	fld    TBYTE PTR [rbp+0x10]
    1b26:	db 6d 20             	fld    TBYTE PTR [rbp+0x20]
    1b29:	de c1                	faddp  st(1),st
    1b2b:	db 7d e0             	fstp   TBYTE PTR [rbp-0x20]
    1b2e:	48 83 45 d8 01       	add    QWORD PTR [rbp-0x28],0x1
    1b33:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    1b37:	48 3b 45 c8          	cmp    rax,QWORD PTR [rbp-0x38]
    1b3b:	72 e6                	jb     1b23 <get_80_bit_sum_asm+0x29>
    1b3d:	90                   	nop
    1b3e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1b42:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    1b49:	00 00 
    1b4b:	74 05                	je     1b52 <get_80_bit_sum_asm+0x58>
    1b4d:	e8 6e f5 ff ff       	call   10c0 <__stack_chk_fail@plt>
    1b52:	c9                   	leave  
    1b53:	c3                   	ret    

0000000000001b54 <get_80_bit_prod>:
    1b54:	f3 0f 1e fa          	endbr64 
    1b58:	55                   	push   rbp
    1b59:	48 89 e5             	mov    rbp,rsp
    1b5c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    1b60:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
    1b67:	00 
    1b68:	eb 10                	jmp    1b7a <get_80_bit_prod+0x26>
    1b6a:	db 6d 10             	fld    TBYTE PTR [rbp+0x10]
    1b6d:	db 6d 20             	fld    TBYTE PTR [rbp+0x20]
    1b70:	de c9                	fmulp  st(1),st
    1b72:	db 7d f0             	fstp   TBYTE PTR [rbp-0x10]
    1b75:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
    1b7a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1b7e:	48 3b 45 d8          	cmp    rax,QWORD PTR [rbp-0x28]
    1b82:	72 e6                	jb     1b6a <get_80_bit_prod+0x16>
    1b84:	90                   	nop
    1b85:	90                   	nop
    1b86:	5d                   	pop    rbp
    1b87:	c3                   	ret    

0000000000001b88 <get_80_bit_prod_asm>:
    1b88:	f3 0f 1e fa          	endbr64 
    1b8c:	55                   	push   rbp
    1b8d:	48 89 e5             	mov    rbp,rsp
    1b90:	48 83 ec 40          	sub    rsp,0x40
    1b94:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    1b98:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1b9f:	00 00 
    1ba1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1ba5:	31 c0                	xor    eax,eax
    1ba7:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    1bae:	00 
    1baf:	eb 10                	jmp    1bc1 <get_80_bit_prod_asm+0x39>
    1bb1:	db 6d 10             	fld    TBYTE PTR [rbp+0x10]
    1bb4:	db 6d 20             	fld    TBYTE PTR [rbp+0x20]
    1bb7:	de c9                	fmulp  st(1),st
    1bb9:	db 7d e0             	fstp   TBYTE PTR [rbp-0x20]
    1bbc:	48 83 45 d8 01       	add    QWORD PTR [rbp-0x28],0x1
    1bc1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    1bc5:	48 3b 45 c8          	cmp    rax,QWORD PTR [rbp-0x38]
    1bc9:	72 e6                	jb     1bb1 <get_80_bit_prod_asm+0x29>
    1bcb:	90                   	nop
    1bcc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1bd0:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    1bd7:	00 00 
    1bd9:	74 05                	je     1be0 <get_80_bit_prod_asm+0x58>
    1bdb:	e8 e0 f4 ff ff       	call   10c0 <__stack_chk_fail@plt>
    1be0:	c9                   	leave  
    1be1:	c3                   	ret    

0000000000001be2 <out_80_bit_dimension>:
    1be2:	f3 0f 1e fa          	endbr64 
    1be6:	55                   	push   rbp
    1be7:	48 89 e5             	mov    rbp,rsp
    1bea:	48 83 ec 40          	sub    rsp,0x40
    1bee:	be 80 00 00 00       	mov    esi,0x80
    1bf3:	48 8d 3d 96 06 00 00 	lea    rdi,[rip+0x696]        # 2290 <_IO_stdin_used+0x290>
    1bfa:	b8 00 00 00 00       	mov    eax,0x0
    1bff:	e8 cc f4 ff ff       	call   10d0 <printf@plt>
    1c04:	db 2d f6 06 00 00    	fld    TBYTE PTR [rip+0x6f6]        # 2300 <_IO_stdin_used+0x300>
    1c0a:	db 7d e0             	fstp   TBYTE PTR [rbp-0x20]
    1c0d:	db 2d fd 06 00 00    	fld    TBYTE PTR [rip+0x6fd]        # 2310 <_IO_stdin_used+0x310>
    1c13:	db 7d f0             	fstp   TBYTE PTR [rbp-0x10]
    1c16:	e8 95 f4 ff ff       	call   10b0 <clock@plt>
    1c1b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    1c1f:	ff 75 f8             	push   QWORD PTR [rbp-0x8]
    1c22:	ff 75 f0             	push   QWORD PTR [rbp-0x10]
    1c25:	ff 75 e8             	push   QWORD PTR [rbp-0x18]
    1c28:	ff 75 e0             	push   QWORD PTR [rbp-0x20]
    1c2b:	bf 40 42 0f 00       	mov    edi,0xf4240
    1c30:	e8 91 fe ff ff       	call   1ac6 <get_80_bit_sum>
    1c35:	48 83 c4 20          	add    rsp,0x20
    1c39:	e8 72 f4 ff ff       	call   10b0 <clock@plt>
    1c3e:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    1c42:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    1c46:	48 2b 45 d0          	sub    rax,QWORD PTR [rbp-0x30]
    1c4a:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    1c4e:	df 6d c8             	fild   QWORD PTR [rbp-0x38]
    1c51:	dd 05 c9 06 00 00    	fld    QWORD PTR [rip+0x6c9]        # 2320 <_IO_stdin_used+0x320>
    1c57:	de f9                	fdivp  st(1),st
    1c59:	dd 05 c1 06 00 00    	fld    QWORD PTR [rip+0x6c1]        # 2320 <_IO_stdin_used+0x320>
    1c5f:	de f9                	fdivp  st(1),st
    1c61:	dd 5d c8             	fstp   QWORD PTR [rbp-0x38]
    1c64:	f2 0f 10 45 c8       	movsd  xmm0,QWORD PTR [rbp-0x38]
    1c69:	48 8d 3d 40 06 00 00 	lea    rdi,[rip+0x640]        # 22b0 <_IO_stdin_used+0x2b0>
    1c70:	b8 01 00 00 00       	mov    eax,0x1
    1c75:	e8 56 f4 ff ff       	call   10d0 <printf@plt>
    1c7a:	e8 31 f4 ff ff       	call   10b0 <clock@plt>
    1c7f:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    1c83:	ff 75 f8             	push   QWORD PTR [rbp-0x8]
    1c86:	ff 75 f0             	push   QWORD PTR [rbp-0x10]
    1c89:	ff 75 e8             	push   QWORD PTR [rbp-0x18]
    1c8c:	ff 75 e0             	push   QWORD PTR [rbp-0x20]
    1c8f:	bf 40 42 0f 00       	mov    edi,0xf4240
    1c94:	e8 61 fe ff ff       	call   1afa <get_80_bit_sum_asm>
    1c99:	48 83 c4 20          	add    rsp,0x20
    1c9d:	e8 0e f4 ff ff       	call   10b0 <clock@plt>
    1ca2:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    1ca6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    1caa:	48 2b 45 d0          	sub    rax,QWORD PTR [rbp-0x30]
    1cae:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    1cb2:	df 6d c8             	fild   QWORD PTR [rbp-0x38]
    1cb5:	dd 05 65 06 00 00    	fld    QWORD PTR [rip+0x665]        # 2320 <_IO_stdin_used+0x320>
    1cbb:	de f9                	fdivp  st(1),st
    1cbd:	dd 05 5d 06 00 00    	fld    QWORD PTR [rip+0x65d]        # 2320 <_IO_stdin_used+0x320>
    1cc3:	de f9                	fdivp  st(1),st
    1cc5:	dd 5d c8             	fstp   QWORD PTR [rbp-0x38]
    1cc8:	f2 0f 10 45 c8       	movsd  xmm0,QWORD PTR [rbp-0x38]
    1ccd:	48 8d 3d ef 05 00 00 	lea    rdi,[rip+0x5ef]        # 22c3 <_IO_stdin_used+0x2c3>
    1cd4:	b8 01 00 00 00       	mov    eax,0x1
    1cd9:	e8 f2 f3 ff ff       	call   10d0 <printf@plt>
    1cde:	e8 cd f3 ff ff       	call   10b0 <clock@plt>
    1ce3:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    1ce7:	ff 75 f8             	push   QWORD PTR [rbp-0x8]
    1cea:	ff 75 f0             	push   QWORD PTR [rbp-0x10]
    1ced:	ff 75 e8             	push   QWORD PTR [rbp-0x18]
    1cf0:	ff 75 e0             	push   QWORD PTR [rbp-0x20]
    1cf3:	bf 40 42 0f 00       	mov    edi,0xf4240
    1cf8:	e8 57 fe ff ff       	call   1b54 <get_80_bit_prod>
    1cfd:	48 83 c4 20          	add    rsp,0x20
    1d01:	e8 aa f3 ff ff       	call   10b0 <clock@plt>
    1d06:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    1d0a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    1d0e:	48 2b 45 d0          	sub    rax,QWORD PTR [rbp-0x30]
    1d12:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    1d16:	df 6d c8             	fild   QWORD PTR [rbp-0x38]
    1d19:	dd 05 01 06 00 00    	fld    QWORD PTR [rip+0x601]        # 2320 <_IO_stdin_used+0x320>
    1d1f:	de f9                	fdivp  st(1),st
    1d21:	dd 05 f9 05 00 00    	fld    QWORD PTR [rip+0x5f9]        # 2320 <_IO_stdin_used+0x320>
    1d27:	de f9                	fdivp  st(1),st
    1d29:	dd 5d c8             	fstp   QWORD PTR [rbp-0x38]
    1d2c:	f2 0f 10 45 c8       	movsd  xmm0,QWORD PTR [rbp-0x38]
    1d31:	48 8d 3d 9e 05 00 00 	lea    rdi,[rip+0x59e]        # 22d6 <_IO_stdin_used+0x2d6>
    1d38:	b8 01 00 00 00       	mov    eax,0x1
    1d3d:	e8 8e f3 ff ff       	call   10d0 <printf@plt>
    1d42:	e8 69 f3 ff ff       	call   10b0 <clock@plt>
    1d47:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    1d4b:	ff 75 f8             	push   QWORD PTR [rbp-0x8]
    1d4e:	ff 75 f0             	push   QWORD PTR [rbp-0x10]
    1d51:	ff 75 e8             	push   QWORD PTR [rbp-0x18]
    1d54:	ff 75 e0             	push   QWORD PTR [rbp-0x20]
    1d57:	bf 40 42 0f 00       	mov    edi,0xf4240
    1d5c:	e8 27 fe ff ff       	call   1b88 <get_80_bit_prod_asm>
    1d61:	48 83 c4 20          	add    rsp,0x20
    1d65:	e8 46 f3 ff ff       	call   10b0 <clock@plt>
    1d6a:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    1d6e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    1d72:	48 2b 45 d0          	sub    rax,QWORD PTR [rbp-0x30]
    1d76:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    1d7a:	df 6d c8             	fild   QWORD PTR [rbp-0x38]
    1d7d:	dd 05 9d 05 00 00    	fld    QWORD PTR [rip+0x59d]        # 2320 <_IO_stdin_used+0x320>
    1d83:	de f9                	fdivp  st(1),st
    1d85:	dd 05 95 05 00 00    	fld    QWORD PTR [rip+0x595]        # 2320 <_IO_stdin_used+0x320>
    1d8b:	de f9                	fdivp  st(1),st
    1d8d:	dd 5d c8             	fstp   QWORD PTR [rbp-0x38]
    1d90:	f2 0f 10 45 c8       	movsd  xmm0,QWORD PTR [rbp-0x38]
    1d95:	48 8d 3d 4d 05 00 00 	lea    rdi,[rip+0x54d]        # 22e9 <_IO_stdin_used+0x2e9>
    1d9c:	b8 01 00 00 00       	mov    eax,0x1
    1da1:	e8 2a f3 ff ff       	call   10d0 <printf@plt>
    1da6:	bf 0a 00 00 00       	mov    edi,0xa
    1dab:	e8 e0 f2 ff ff       	call   1090 <putchar@plt>
    1db0:	90                   	nop
    1db1:	c9                   	leave  
    1db2:	c3                   	ret    
    1db3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    1dba:	00 00 00 
    1dbd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000001dc0 <__libc_csu_init>:
    1dc0:	f3 0f 1e fa          	endbr64 
    1dc4:	41 57                	push   r15
    1dc6:	4c 8d 3d cb 1f 00 00 	lea    r15,[rip+0x1fcb]        # 3d98 <__frame_dummy_init_array_entry>
    1dcd:	41 56                	push   r14
    1dcf:	49 89 d6             	mov    r14,rdx
    1dd2:	41 55                	push   r13
    1dd4:	49 89 f5             	mov    r13,rsi
    1dd7:	41 54                	push   r12
    1dd9:	41 89 fc             	mov    r12d,edi
    1ddc:	55                   	push   rbp
    1ddd:	48 8d 2d bc 1f 00 00 	lea    rbp,[rip+0x1fbc]        # 3da0 <__do_global_dtors_aux_fini_array_entry>
    1de4:	53                   	push   rbx
    1de5:	4c 29 fd             	sub    rbp,r15
    1de8:	48 83 ec 08          	sub    rsp,0x8
    1dec:	e8 0f f2 ff ff       	call   1000 <_init>
    1df1:	48 c1 fd 03          	sar    rbp,0x3
    1df5:	74 1f                	je     1e16 <__libc_csu_init+0x56>
    1df7:	31 db                	xor    ebx,ebx
    1df9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1e00:	4c 89 f2             	mov    rdx,r14
    1e03:	4c 89 ee             	mov    rsi,r13
    1e06:	44 89 e7             	mov    edi,r12d
    1e09:	41 ff 14 df          	call   QWORD PTR [r15+rbx*8]
    1e0d:	48 83 c3 01          	add    rbx,0x1
    1e11:	48 39 dd             	cmp    rbp,rbx
    1e14:	75 ea                	jne    1e00 <__libc_csu_init+0x40>
    1e16:	48 83 c4 08          	add    rsp,0x8
    1e1a:	5b                   	pop    rbx
    1e1b:	5d                   	pop    rbp
    1e1c:	41 5c                	pop    r12
    1e1e:	41 5d                	pop    r13
    1e20:	41 5e                	pop    r14
    1e22:	41 5f                	pop    r15
    1e24:	c3                   	ret    
    1e25:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    1e2c:	00 00 00 00 

0000000000001e30 <__libc_csu_fini>:
    1e30:	f3 0f 1e fa          	endbr64 
    1e34:	c3                   	ret    

Disassembly of section .fini:

0000000000001e38 <_fini>:
    1e38:	f3 0f 1e fa          	endbr64 
    1e3c:	48 83 ec 08          	sub    rsp,0x8
    1e40:	48 83 c4 08          	add    rsp,0x8
    1e44:	c3                   	ret    
